<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>GC NG BABBAGE</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f4;
            margin: 0;
            padding: 0;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
        }

        .container {
            background-color: #ffffff;
            border-radius: 8px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            width: 90%;
            max-width: 600px;
            padding: 20px;
            display: flex;
            flex-direction: column;
            height: 80%;
            max-height: 600px;
            overflow: hidden;
        }

        h1 {
            color: #333;
            font-size: 24px;
            margin: 0;
            text-align: center;
        }

        #chat {
            flex: 1;
            overflow-y: auto;
            margin-bottom: 10px;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            background-color: #fafafa;
        }

        .message {
            padding: 8px;
            margin-bottom: 10px;
            border-radius: 4px;
            background-color: #e0e0e0;
            font-size: 14px;
        }

        .audio-message {
            display: flex;
            align-items: center;
            margin-bottom: 10px;
        }

        .audio-message audio {
            margin-right: 10px;
        }

        #nameInput, #messageInput {
            width: calc(50% - 10px);
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            font-size: 14px;
            margin-right: 10px;
        }

        #messageInput {
            margin-right: 0;
        }

        #sendButton, #recordButton {
            padding: 10px;
            border: none;
            border-radius: 4px;
            background-color: #007bff;
            color: white;
            font-size: 14px;
            cursor: pointer;
            transition: background-color 0.3s;
        }

        #sendButton:hover, #recordButton:hover {
            background-color: #0056b3;
        }

        .input-group {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        #recordButton {
            background-color: #28a745;
        }

        #recordButton:hover {
            background-color: #218838;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Group Chat Ng Ba</h1>
        <div id="chat"></div>
        <div class="input-group">
            <input type="text" id="nameInput" placeholder="Type your name..." maxlength="10">
            <input type="text" id="messageInput" placeholder="Type your message...">
            <button id="sendButton">Send</button>
            <button id="recordButton">Record</button>
        </div>
    </div>

    <script>
        const chatDiv = document.getElementById('chat');
        const sendButton = document.getElementById('sendButton');
        const recordButton = document.getElementById('recordButton');
        const nameInput = document.getElementById('nameInput');
        const messageInput = document.getElementById('messageInput');

        let isRecording = false;
        let mediaRecorder;
        let audioChunks = [];

        const addMessage = (name, message, isAudio = false) => {
            const messageElement = document.createElement('div');
            messageElement.classList.add('message');
            if (isAudio) {
                const audioMessageElement = document.createElement('div');
                audioMessageElement.classList.add('audio-message');
                const audioElement = document.createElement('audio');
                audioElement.controls = true;
                audioElement.src = URL.createObjectURL(message);
                audioMessageElement.appendChild(audioElement);
                messageElement.appendChild(audioMessageElement);
            } else {
                messageElement.textContent = `${name}: ${message}`;
            }
            chatDiv.appendChild(messageElement);
        };

        const sendMessage = () => {
            const name = nameInput.value.trim();
            const message = messageInput.value.trim();
            if (name !== '' && message !== '') {
                addMessage(name, message);
                messageInput.value = '';
                nameInput.disabled = true; // Disable name input after sending message
            }
        };

        sendButton.addEventListener('click', sendMessage);

        recordButton.addEventListener('mousedown', () => {
            if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {
                navigator.mediaDevices.getUserMedia({ audio: true })
                    .then(stream => {
                        mediaRecorder = new MediaRecorder(stream);
                        mediaRecorder.ondataavailable = event => {
                            audioChunks.push(event.data);
                        };
                        mediaRecorder.onstop = () => {
                            const audioBlob = new Blob(audioChunks, { type: 'audio/wav' });
                            audioChunks = [];
                            addMessage(nameInput.value.trim(), audioBlob, true);
                        };
                        mediaRecorder.start();
                        isRecording = true;
                        recordButton.textContent = 'Stop';
                    });
            }
        });

        recordButton.addEventListener('mouseup', () => {
            if (isRecording) {
                mediaRecorder.stop();
                isRecording = false;
                recordButton.textContent = 'Record';
            }
        });

        messageInput.addEventListener('keydown', event => {
            if (event.key === 'Enter') {
                sendMessage();
            }
        });
    </script>
</body>
</html>
